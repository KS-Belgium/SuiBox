{"ast":null,"code":"var _jsxFileName = \"C:\\\\Kryptosphere\\\\2024\\\\Hack-Laussane\\\\ZkBox\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Importer le CSS de Bootstrap\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [response, setResponse] = useState('');\n  const [status, setStatus] = useState('');\n  const [lastMessage, setLastMessage] = useState('');\n\n  // Fonction pour créer une nouvelle carte\n  const createCard = async () => {\n    try {\n      const res = await fetch('http://localhost:3000/send', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: 'write'\n        }) // Message à envoyer à l'Arduino\n      });\n      const data = await res.text();\n      setResponse(data);\n    } catch (error) {\n      console.error('Erreur:', error);\n      setResponse('Erreur lors de la création de la carte.');\n    }\n  };\n\n  // Fonction pour sélectionner une chambre\n  const selectRoom = async room => {\n    try {\n      const res = await fetch('http://localhost:3000/send', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: `select ${room}`\n        }) // Message pour sélectionner une chambre\n      });\n      const data = await res.text();\n      setResponse(data);\n    } catch (error) {\n      console.error('Erreur:', error);\n      setResponse('Erreur lors de la sélection de la chambre.');\n    }\n  };\n\n  // Fonction pour récupérer l'état du coffre\n  const fetchStatus = async () => {\n    try {\n      const res = await fetch('http://localhost:3000/status');\n      const data = await res.text();\n      setStatus('État du coffre: ' + data);\n    } catch (error) {\n      console.error('Erreur:', error);\n      setStatus('Erreur lors de la récupération de l\\'état.');\n    }\n  };\n\n  // Fonction pour récupérer le dernier message de l'Arduino\n  const fetchLastMessage = async () => {\n    try {\n      const res = await fetch('http://localhost:3000/last-message');\n      const data = await res.text();\n      setLastMessage('Dernier message Arduino: ' + data);\n    } catch (error) {\n      console.error('Erreur:', error);\n      setLastMessage('Aucun message reçu.');\n    }\n  };\n\n  // Utiliser useEffect pour appeler fetchStatus et fetchLastMessage toutes les 2 secondes\n  useEffect(() => {\n    const intervalStatus = setInterval(fetchStatus, 2000);\n    const intervalLastMessage = setInterval(fetchLastMessage, 2000);\n\n    // Nettoyer les intervalles lors du démontage du composant\n    return () => {\n      clearInterval(intervalStatus);\n      clearInterval(intervalLastMessage);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Contr\\xF4ler le Coffre Arduino\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"S\\xE9lectionner une chambre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            className: \"list-group-item list-group-item-action\",\n            onClick: () => selectRoom('Room 1'),\n            children: \"Room 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            className: \"list-group-item list-group-item-action disabled\",\n            children: \"Room 2 (D\\xE9sactiv\\xE9)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            className: \"list-group-item list-group-item-action\",\n            onClick: () => selectRoom('Room 3'),\n            children: \"Room 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: createCard,\n          children: \"Cr\\xE9er une nouvelle carte\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-info mt-3\",\n          role: \"alert\",\n          children: response\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-secondary\",\n          role: \"alert\",\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-light\",\n          role: \"alert\",\n          children: lastMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"di11zwkbQfYvCmqQ492LSCKnBi0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","response","setResponse","status","setStatus","lastMessage","setLastMessage","createCard","res","fetch","method","headers","body","JSON","stringify","message","data","text","error","console","selectRoom","room","fetchStatus","fetchLastMessage","intervalStatus","setInterval","intervalLastMessage","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","onClick","role","_c","$RefreshReg$"],"sources":["C:/Kryptosphere/2024/Hack-Laussane/ZkBox/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Importer le CSS de Bootstrap\n\nfunction App() {\n    const [response, setResponse] = useState('');\n    const [status, setStatus] = useState('');\n    const [lastMessage, setLastMessage] = useState('');\n\n    // Fonction pour créer une nouvelle carte\n    const createCard = async () => {\n        try {\n            const res = await fetch('http://localhost:3000/send', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ message: 'write' }) // Message à envoyer à l'Arduino\n            });\n            const data = await res.text();\n            setResponse(data);\n        } catch (error) {\n            console.error('Erreur:', error);\n            setResponse('Erreur lors de la création de la carte.');\n        }\n    };\n\n    // Fonction pour sélectionner une chambre\n    const selectRoom = async (room) => {\n        try {\n            const res = await fetch('http://localhost:3000/send', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ message: `select ${room}` }) // Message pour sélectionner une chambre\n            });\n            const data = await res.text();\n            setResponse(data);\n        } catch (error) {\n            console.error('Erreur:', error);\n            setResponse('Erreur lors de la sélection de la chambre.');\n        }\n    };\n\n    // Fonction pour récupérer l'état du coffre\n    const fetchStatus = async () => {\n        try {\n            const res = await fetch('http://localhost:3000/status');\n            const data = await res.text();\n            setStatus('État du coffre: ' + data);\n        } catch (error) {\n            console.error('Erreur:', error);\n            setStatus('Erreur lors de la récupération de l\\'état.');\n        }\n    };\n\n    // Fonction pour récupérer le dernier message de l'Arduino\n    const fetchLastMessage = async () => {\n        try {\n            const res = await fetch('http://localhost:3000/last-message');\n            const data = await res.text();\n            setLastMessage('Dernier message Arduino: ' + data);\n        } catch (error) {\n            console.error('Erreur:', error);\n            setLastMessage('Aucun message reçu.');\n        }\n    };\n\n    // Utiliser useEffect pour appeler fetchStatus et fetchLastMessage toutes les 2 secondes\n    useEffect(() => {\n        const intervalStatus = setInterval(fetchStatus, 2000);\n        const intervalLastMessage = setInterval(fetchLastMessage, 2000);\n\n        // Nettoyer les intervalles lors du démontage du composant\n        return () => {\n            clearInterval(intervalStatus);\n            clearInterval(intervalLastMessage);\n        };\n    }, []);\n\n    return (\n        <div className=\"container mt-5\">\n            <h1 className=\"text-center\">Contrôler le Coffre Arduino</h1>\n            <div className=\"row\">\n                <div className=\"col-md-4\">\n                    <h3>Sélectionner une chambre</h3>\n                    <div className=\"list-group\">\n                        <a \n                            href=\"#\" \n                            className=\"list-group-item list-group-item-action\" \n                            onClick={() => selectRoom('Room 1')}>\n                            Room 1\n                        </a>\n                        <a \n                            href=\"#\" \n                            className=\"list-group-item list-group-item-action disabled\">\n                            Room 2 (Désactivé)\n                        </a>\n                        <a \n                            href=\"#\" \n                            className=\"list-group-item list-group-item-action\" \n                            onClick={() => selectRoom('Room 3')}>\n                            Room 3\n                        </a>\n                    </div>\n                </div>\n                <div className=\"col-md-8\">\n                    <button className=\"btn btn-primary\" onClick={createCard}>\n                        Créer une nouvelle carte\n                    </button>\n                    <div className=\"alert alert-info mt-3\" role=\"alert\">\n                        {response}\n                    </div>\n                    <div className=\"alert alert-secondary\" role=\"alert\">\n                        {status}\n                    </div>\n                    <div className=\"alert alert-light\" role=\"alert\">\n                        {lastMessage}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}